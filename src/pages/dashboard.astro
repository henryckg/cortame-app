---
import Card from "@/components/Card.astro";
import LinkCard from "@/components/LinkCard.astro";
import Layout from "@/layouts/Layout.astro";
import Copy from "@/assets/svg/copy.svg";
import Link from "@/assets/svg/link.svg";
import ChartBar from "@/assets/svg/chart-bar.svg";
import QR from "@/assets/svg/qrcode.svg";
import Trash from "@/assets/svg/trash.svg";
import ExternalLink from "@/assets/svg/external-link.svg";
import { getUserLinks } from "@/db/client";

const user = await Astro.locals.currentUser();
if (!user) return Astro.redirect("/");

const BASE_URL = Astro.url.origin

const userId = user.emailAddresses[0]?.emailAddress;
const userLinks = await getUserLinks(userId);
const randomNumber = Math.floor(Math.random() * 150) + 1
---

<Layout title="Dashboard - C贸rtame">
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-2xl font-bold">Dashboard</h1>
    <!-- <button
      class="bg-emerald-600 hover:bg-emerald-700 transition-all duration-150 cursor-pointer text-white px-4 py-2 text-md rounded-md hover:scale-105"
    >
      + Nuevo Link
    </button> -->
  </div>

  <section class="grid grid-cols-3 justify-items-center gap-8 mb-8">
    <Card title="Total de Links" content={userLinks.length} />
    <Card title="Visitas Totales" content={randomNumber} />
    <Card title="C贸digos QR Generados" content={userLinks.length} />
  </section>

  <section class="mb-8 flex flex-col gap-4">
    <div class="rounded-md border w-full bg-forest-darker border-forest-dark flex flex-col justify-between px-8 py-4 gap-8">
      <div>
        <h3 class="text-lg font-bold">Crear Nuevo Link</h3>
        <div class="text-gray-400">
          Acorta una URL y opcionalmente genera un c贸digo QR
        </div>
      </div>
      <div>
        <form id="url-form" class="space-y-4">
          <div>
            <label class="text-sm font-medium mb-2 block ">URL Original</label>
            <input
              placeholder="https://tu-url-larga.com"
              name="original-url"
              class="bg-[#1a2622] border-[#2a3c36] text-white focus-visible:ring-emerald-500 w-full px-3 py-2"
            />
          </div>
          <div>
            <label class="text-sm font-medium mb-2 block"
              >Alias personalizado (opcional)</label
            >
            <div class="flex items-center">
              <span
                class="bg-[#1a2622] border border-r-0 border-[#2a3c36] px-3 py-2 rounded-l-md text-gray-400 w-80 text-center"
              >
                {BASE_URL}/
              </span>
              <input
                name="slug"
                placeholder="mi-link"
                class="rounded-l-none bg-[#1a2622] border-[#2a3c36] text-white focus-visible:ring-emerald-500 px-3 py-2 w-full"
              />
            </div>
          </div>
          <div class="flex items-center space-x-2">
            <input
              type="checkbox"
              id="generate-qr"
              class="accent-emerald-500 cursor-not-allowed"
              disabled
            />
            <label for="generate-qr" class="text-sm">
              Generar c贸digo QR
            </label>
          </div>
          <div class="flex items-center space-x-2">
            <input 
              type="checkbox" 
              id="use-ai" 
              class="accent-emerald-500 cursor-not-allowed"
              disabled
            />
            <label for="use-ai" class="text-sm">
              Usar IA para optimizar
            </label>
          </div>
          <button 
            type="submit"
            class="bg-emerald-600 hover:bg-emerald-700 w-full rounded-md py-2 cursor-pointer transition"
          >
            Crear Link
          </button>
        </form>
      </div>
    </div>
    
    <div class="flex items-center justify-between">
      <h2 class="text-xl font-bold">Gestionar Links</h2>
      <form>
        <input
          type="text"
          placeholder="Buscar links..."
          class="text-sm py-2 px-4 bg-forest-darker border-forest text-white w-64 focus-visible:ring-emerald-500 font-normal"
        />
      </form>
    </div>

    <aside
      class="bg-forest-darker border rounded-md border-forest w-52 flex justify-between text-gray-400 px-4 py-2 text-sm"
    >
      <button
        class="cursor-pointer data-[state=active]:bg-emerald-600 data-[state=active]:text-white"
        >Todos</button
      >
      <button
        class="cursor-pointer data-[state=active]:bg-emerald-600 data-[state=active]:text-white"
        >Con QR</button
      >
      <button
        class="cursor-pointer data-[state=active]:bg-emerald-600 data-[state=active]:text-white"
        >Con IA</button
      >
    </aside>

    <div class="space-y-4 mb-8">
      {
        userLinks.map(({ id, original }) => (
          <LinkCard class="bg-[#1c2b27] border-[#2a3c36] text-white">
            <div class="p-4">
              <div class="flex flex-col md:flex-row md:items-center justify-between gap-4">
                <div class="flex-1">
                  <div class="flex items-center gap-2 mb-1">
                    <div class="text-emerald-500">
                      <Link width={18} height={18} stroke="currentColor" />
                    </div>
                    <a
                      href={String(original)}
                      target="_blank"
                      class="font-medium hover:underline cursor-pointer"
                    >
                      {BASE_URL}/{id}
                    </a>
                    <button class=" text-gray-400 hover:text-white hover:-rotate-3 transition cursor-pointer">
                      <Copy width={18} height={18} />
                    </button>
                  </div>
                  <div class="text-sm text-gray-400 truncate">{original}</div>
                </div>
                <div class="flex items-center gap-6">
                  <div class="flex items-center gap-2 text-sm text-gray-400">
                    <ChartBar width={18} height={18} />
                    <span>42 visitas</span>
                  </div>
                  <button
                    class="border border-emerald-600 rounded-md text-emerald-400 hover:text-white hover:bg-emerald-900/40 flex justify-between items-center w-16 h-8 px-2 text-sm
                    transition cursor-pointer"
                  >
                    <QR width={18} height={18} />
                    <span>QR</span>
                  </button>
                  <a
                    href={String(original)}
                    target="_blank"
                    class="text-gray-400 hover:text-white transition cursor-pointer"
                  >
                    <ExternalLink width={18} height={18} />
                  </a>
                  <button class="text-gray-400 hover:text-red-800 transition cursor-pointer">
                    <Trash width={18} height={18} />
                  </button>
                </div>
              </div>
            </div>
          </LinkCard>
        ))
      }
    </div>


    
  </section>
</Layout>

<script>
  const urlForm = document.querySelector('#url-form') as HTMLFormElement | null;
  urlForm?.addEventListener('submit', async (e) => {
    e.preventDefault()

    const formData = new FormData(e.target as HTMLFormElement)
    const originalUrl = formData.get('original-url')
    const slug = formData.get('slug')

    const res = await fetch('/api/shorten', {
      method: 'POST',
      body: JSON.stringify({
        slug,
        url: originalUrl
      }),
      headers: {'Content-Type': 'application/json'}
    })

    if (res.ok) {
      window.location.reload()
    }

  })
</script>